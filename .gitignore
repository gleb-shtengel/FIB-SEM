# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

Merlin*.dat
*.jpg
*.png
*.ai
*.tmp
*.doc
*.docx
*.xlsx
Test_data
FSC.py
RL_gs.py
2D_Gaussian_Fit.ipynb
Background_level_subrtraction.ipynb
Dask_examples.ipynb
dask-profile.html
dask_work.py
examples_h5writing.ipynb
Comparison_of_J10_and_J9.ipynb
FIB-SEM Dask Array Dev.ipynb
FIB-SEM Registration Dev.ipynb
FIB-SEM_Noise_Analysis.ipynb
FIB-SEM_Noise_Analysis_new.ipynb
iPALM_Calibration_Zextraction_LID613.ipynb
Register_FIB-SEM_stack_DASK_v1_HeLa3.ipynb
Evaluate_registrations_HeLa3.ipynb
Evaluate_registrations_LID277_cell11.ipynb
Read_analyze_TIFF_stack_registration.ipynb
LID609_ROI2_streaking_study.ipynb
HeLa3_crop.ipynb
FIB-SEM_resolution_evaluation_with_SIFT_FRC.ipynb
Register_FIB-SEM_stack_DASK_v1_HeLa3.ipynb
Register_FIB-SEM_stack_DASK_v3_Weinberg_jrc_mus-nacc-1.ipynb
Register_FIB-SEM_stack_DASK_v3_Weinberg_sample1.ipynb
Register_FIB-SEM_stack_DASK_v3_Weinberg_sample2.ipynb
Register_FIB-SEM_stack_DASK_v3_Pietro WT-DS-8.ipynb
Register_FIB-SEM_stack_DASK_v3_Z1215-01m_n1.ipynb
Register_FIB-SEM_stack_DASK_v3_Z0517-51m_VNC_Sec16.ipynb
Register_FIB-SEM_stack_DASK_v2_LID277_Cell11.ipynb
Register_FIB-SEM_stack_DASK_v2_Cryo_LoadID375_ROI1b.ipynb
Register_FIB-SEM_stack_DASK_v1_LID214_Cell2.ipynb
Register_FIB-SEM_stack_DASK_v1_LID410_ROI1.ipynb
Register_FIB-SEM_stack_DASK_v1_LID596_ROI1.ipynb
Register_FIB-SEM_stack_DASK_v3_FS162v2_Cell1.ipynb
Register_FIB-SEM_stack_DASK_v3_20161004_S3_cell1_part1.ipynb
Register_FIB-SEM_stack_DASK_v3_20161004_S3_cell1_part2.ipynb
Register_FIB-SEM_stack_DASK_v3_Cryo_20161004_S3_Cell11.ipynb
Register_FIB-SEM_stack_DASK_v3_LID185_Cell9.ipynb
Register_FIB-SEM_stack_DASK_v3_LID375_ROI1b.ipynb
Register_FIB-SEM_stack_DASK_v3_LID381_ROI1.ipynb
Register_FIB-SEM_stack_DASK_v3_LID381_ROI1b.ipynb
Register_FIB-SEM_stack_DASK_v2_LID391.ipynb
Register_FIB-SEM_stack_DASK_v2_LID391_exp2.ipynb
Register_FIB-SEM_stack_DASK_v2_LID391_exp3.ipynb
Register_FIB-SEM_stack_DASK_v2_LID391_exp4.ipynb
Register_FIB-SEM_stack_DASK_v2_LID391_4nm.ipynb
Register_FIB-SEM_stack_DASK_v3_LID609_ROI2.ipynb
Register_FIB-SEM_stack_DASK_v3_LID572_ROI1.ipynb
iPALM_Calibration_Zextraction.ipynb
Untitled.ipynb
Sapphire_interface_reflectivity_calculations.ipynb
FSC_edge_resolution_modeling.ipynb
Read_Analyze_registrations.ipynb
MRC_stack_analysis.ipynb
FIB-SEM_resolution_J6_03112020_Smoothing_Noise_Richardson_Lucy_EM.ipynb
PolynomialFeatures_regression_evaluation.ipynb
pysift.py
Read_Plot_FIJI_TransformationMatrix.ipynb
Read_Analyze_registrations_LID556.ipynb
Read_Analyze_registrations_Shirish.ipynb
Read_Analyze_registrations_v0.ipynb
Read_ZRDs.ipynb
.ipynb_checkpoints
__pycache__
dask-worker-space
~*.*
Register_FIB-SEM_stack_DASK_v2_Cryo_20161004_S3_Cell11 - Copy.ipynb

src/SIFT_gs/version.py
